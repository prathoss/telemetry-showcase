package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/google/uuid"
	"github.com/prathoss/telemetry_showcase/gateway/server"
	"github.com/prathoss/telemetry_showcase/gateway/server/model"
)

// StartRide is the resolver for the startRide field.
func (r *mutationResolver) StartRide(ctx context.Context, bikeID uuid.UUID) (*model.RideResponse, error) {
	panic(fmt.Errorf("not implemented: StartRide - startRide"))
}

// EndRide is the resolver for the endRide field.
func (r *mutationResolver) EndRide(ctx context.Context, rideID uuid.UUID) (*model.RideResponse, error) {
	panic(fmt.Errorf("not implemented: EndRide - endRide"))
}

// GetUser is the resolver for the getUser field.
func (r *queryResolver) GetUser(ctx context.Context) (*model.UserResponse, error) {
	panic(fmt.Errorf("not implemented: GetUser - getUser"))
}

// GetBike is the resolver for the getBike field.
func (r *queryResolver) GetBike(ctx context.Context, id uuid.UUID) (*model.BikeResponse, error) {
	panic(fmt.Errorf("not implemented: GetBike - getBike"))
}

// Mutation returns server.MutationResolver implementation.
func (r *Resolver) Mutation() server.MutationResolver { return &mutationResolver{r} }

// Query returns server.QueryResolver implementation.
func (r *Resolver) Query() server.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
